"""empty message

Revision ID: 44106eda068e
Revises: cd02e7f9639a
Create Date: 2019-12-07 23:53:44.384606

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '44106eda068e'
down_revision = 'cd02e7f9639a'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('KeyValueStore',
    sa.Column('key', sa.String(length=190), nullable=False),
    sa.Column('value', sa.String(length=190), nullable=True),
    sa.PrimaryKeyConstraint('key', name=op.f('pk_KeyValueStore'))
    )
    op.create_table('Rule',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=190), nullable=True),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('last_run', sa.Integer(), nullable=True),
    sa.Column('next_run', sa.Integer(), nullable=True),
    sa.Column('execution_schedule', sa.Text(), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_Rule')),
    sa.UniqueConstraint('name', name=op.f('uq_Rule_name'))
    )
    op.create_table('SubRule',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('rule_id', sa.Integer(), nullable=True),
    sa.Column('position', sa.Integer(), nullable=True),
    sa.Column('variable_key', sa.String(length=190), nullable=True),
    sa.Column('operator', sa.String(length=2), nullable=True),
    sa.Column('comparison', sa.String(length=190), nullable=True),
    sa.Column('type_id', sa.Integer(), nullable=True),
    sa.Column('add_tag_id', sa.Integer(), nullable=True),
    sa.Column('remove_tag_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['add_tag_id'], ['Tag.id'], name=op.f('fk_SubRule_add_tag_id')),
    sa.ForeignKeyConstraint(['remove_tag_id'], ['Tag.id'], name=op.f('fk_SubRule_remove_tag_id')),
    sa.ForeignKeyConstraint(['rule_id'], ['Rule.id'], name=op.f('fk_SubRule_rule_id')),
    sa.ForeignKeyConstraint(['type_id'], ['ItemType.id'], name=op.f('fk_SubRule_type_id')),
    sa.ForeignKeyConstraint(['variable_key'], ['KeyValueStore.key'], name=op.f('fk_SubRule_variable_key')),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_SubRule')),
    sa.UniqueConstraint('rule_id', 'position', name='_rule_id_position_uc')
    )
    op.create_table('SubRuleToTag',
    sa.Column('sub_rule_id', sa.Integer(), nullable=False),
    sa.Column('tag_id', sa.Integer(), nullable=False),
    sa.Column('blacklist', sa.Boolean(), nullable=False),
    sa.ForeignKeyConstraint(['sub_rule_id'], ['SubRule.id'], name=op.f('fk_SubRuleToTag_sub_rule_id')),
    sa.ForeignKeyConstraint(['tag_id'], ['Tag.id'], name=op.f('fk_SubRuleToTag_tag_id')),
    sa.PrimaryKeyConstraint('sub_rule_id', 'tag_id', name=op.f('pk_SubRuleToTag'))
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('SubRuleToTag')
    op.drop_table('SubRule')
    op.drop_table('Rule')
    op.drop_table('KeyValueStore')
    # ### end Alembic commands ###
